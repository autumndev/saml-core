{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}

{% set fullPageForm=1 %}

{% set tabs = {
    metadata: {
        id: 'metadata',
        class: 'metadata',
        url: '#metadata',
        label: 'Metadata'
    },
    configure: {
        id:'configure',
        class: 'configure',
        url: '#configure',
        label: 'Configure'
    }
} %}

{% block details %}
    <div>
        <div class="meta">
            <div class="data first">
                <h5 class="heading">{{ "Enabled"|t('app') }}</h5>
                <div class="value flex">
                    <div class="flex-grow">
                        <span class="status {% if provider.enabled %}active{% else %}inactive{% endif %}"></span>
                        {% if provider.enabled %}Enabled{% else %}Disabled{% endif %}
                    </div>
                    {% if actions|length %}
                        <div>
                            <div id="action-menubtn" class="btn menubtn" data-icon="settings"
                                 title="{{ 'Actions'|t('app') }}"></div>
                            <div class="menu">
                                {% for actionList in actions %}
                                    {% if not loop.first %}
                                        <hr>{% endif %}
                                    <ul>
                                        {% for actionItem in actionList %}
                                            <li><a
                                                        {%- if actionItem.id is defined %} id="{{ actionItem.id }}"{% endif %}
                                                        {%- if actionItem.action is defined %} class="formsubmit" data-action="{{ actionItem.action }}"{% endif -%}
                                                >{{ actionItem.label }}</a>
                                            </li>
                                        {% endfor %}
                                    </ul>
                                {% endfor %}
                            </div>
                            <div id="action-spinner" class="spinner hidden"></div>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
        <div class="meta">
            {{ forms.selectField({
                label: "Provider Type"|t(pluginHandle ),
                id: 'providerType',
                name: 'providerType',
                value: provider.id ? provider.type : createType,
                errors: provider.getErrors('type'),
                options: [{
                    value: 'idp',
                    label: 'Identity (IDP)',
                },{
                    value: 'sp',
                    label: 'Service (SP)',
                }],
                required: true
            }) }}

            {% if createType == myType %}
                <hr/>
                {{ forms.selectField({
                    label: "Key Pair"|t(pluginHandle),
                    id: 'keychain',
                    name: 'keychain',
                    value: provider.keychain ? provider.keychain.id : '',
                    errors: provider.getErrors('keychain'),
                    options: allkeypairs|merge([{label:'None',value:null}]),
                    required: true
                }) }}
                <div class="centeralign">
                    <a id="generate-key" class="btn submit">Generate key pair</a>
                </div>
                <div class="centeralign">
                    <a class="go"
                       href="/{{ craft.app.config.general.cpTrigger }}/{{ pluginHandle }}/keychain"
                    >Manage key pairs</a>
                </div>
                <div class="saml-instructions">
                    <p>
                        Note: It is <strong>highly recommended</strong> to create and assign a key pair.
                    </p>
                </div>
                {% do view.registerAssetBundle("flipbox\\keychain\\web\\assets\\bundles\\GenerateKeyPair") %}
                {% js %}
                    new Craft.GenerateKeyPair(
                    $('#generate-key'),
                    $('#keychain'),
                    "{{ pluginHandle }}"
                    );
                {% endjs %}
            {% endif %}
        </div>
        {% if provider.id %}
            <hr>
            <div class="meta read-only">
                <div class="data">
                    <h5 class="heading">{{ "Created at"|t('app') }}</h5>
                    <div class="value">{{ provider.dateCreated|datetime('short') }}</div>
                </div>
                <div class="data">
                    <h5 class="heading">{{ "Updated at"|t('app') }}</h5>
                    <div class="value">{{ provider.dateUpdated|datetime('short') }}</div>
                </div>
            </div>
        {% endif %}
    </div><!-- #settings -->
{% endblock %}

{% block content %}

    <div id="name">
        <input type="hidden" name="action"
               value="{{ baseActionPath }}/metadata/{% if createType == myType or myType == provider.type %}auto-create{% else %}save{% endif %}">
        {{ redirectInput(baseCpPath ~ '/metadata/' ) }}

        {% if provider.id %}<input type="hidden" name="identifier" value="{{ provider.id }}">{% endif %}

        {{ forms.textField({
            label: "Label"|t(pluginHandle ),
            instructions: "Friendly name for the provider. You can use the providers name (like `OKTA`) or the environment (`DEV`) so everyone knows it's purpose."|t(pluginHandle ),
            name: "label",
            id: 'label',
            required: true,
            value: provider.label,
            errors: provider.getErrors('label'),
        }) }}

        {% if myType == provider.type or myType == createType %}
            {{ forms.textField({
                label: "Entity ID"|t(pluginHandle ),
                instructions: "Important: It's recommended to use the value provided. " ~
                " If this value matches a seperate environment, verify it matchs the other environment's "~
                "`baseUrl` exactly. If it's absolutely nessesary to change this value, the config property in the "~
                "`config/"~pluginHandle~".php`."
                |t(pluginHandle ),
                name: "entityId",
                id: 'entityId',
                class: "code",
                value: provider.entityId ?: ownEntityId,
                errors: provider.getErrors('entityId'),
                readonly: false,
                disabled: false
            }) }}
        {% else %}
            {{ forms.textField({
                label: "Entity ID"|t(pluginHandle ),
                instructions: "This is pulled from the Metadata and is readonly."|t(pluginHandle ),
                name: "entityId",
                id: 'entityId',
                class: "code",
                value: provider.entityId,
                errors: provider.getErrors('entityId'),
                readonly: true,
                disabled: true
            }) }}
        {% endif %}
    </div>
    {#
        Default showing
    #}
    <div id="metadata">
        {% if provider.id %}
            <br/>
            <div class="readable">
                <h2>Bindings</h2>
            </div>
            {% if singleSignOnServices %}
                {% for binding, singleSignOnService in singleSignOnServices %}
                    {{ forms.textField({
                        label: "Single Signon Service (SSO) "|t(pluginHandle ),
                        instructions: "Binding: " ~ binding|t(pluginHandle ),
                        name: "acs",
                        id: 'acs',
                        class: "acs",
                        value: singleSignOnService,
                        errors: provider.getErrors('acs'),
                        readonly: true,
                        disabled: true
                    }) }}
                {% endfor %}

            {% endif %}

            {% if assertionConsumerServices %}
                {% for binding, assertionConsumerService in assertionConsumerServices %}
                    {{ forms.textField({
                        label: "Assertion Consumer Service (ACS) " |t(pluginHandle ),
                        instructions: "Binding: " ~ binding|t(pluginHandle ),
                        name: "acs",
                        id: 'acs',
                        class: "acs",
                        value: assertionConsumerService,
                        errors: provider.getErrors('acs'),
                        readonly: true,
                        disabled: true
                    }) }}
                {% endfor %}

            {% endif %}


            {% if singleLogoutServices %}
                {% for binding, singleLogoutService in singleLogoutServices %}
                    {{ forms.textField({
                        label: "Single Logout Service (SLO)" |t(pluginHandle ),
                        instructions: "Binding: " ~ binding|t(pluginHandle ),
                        name: "acs",
                        id: 'acs',
                        class: "acs",
                        value: singleLogoutService,
                        errors: provider.getErrors('acs'),
                        readonly: true,
                        disabled: true
                    }) }}
                {% endfor %}

            {% endif %}
        {% endif %}

        <div class="readable">
            <h2>Metadata</h2>
        </div>
        {% if provider.keychain and createType == myType %}
            <p>
                <a target="_blank"
                   class="btn large"
                   href="{{ actionUrl(pluginHandle ~ '/metadata/download-certificate?keyId='~provider.keychain.id) }}">
                    Download Certificate
                </a>
            </p>
        {% endif %}

        {{ forms.textareaField({
            label: "Metadata XML"|t(pluginHandle ),
            instructions: "Paste Metadata XML from the provider."|t(pluginHandle ),
            class: "code",
            id: 'metadata',
            name: 'metadata',
            value: createType == myType and not provider.metadata ? 'This field is created automatically.' : provider.metadata,
            readonly: createType == myType ? true : false,
            disabled: createType == myType ? true : false,
            errors: provider.getErrors('metadata'),
            required: true,
            rows: 10
        }) }}
    </div>

    <div id="configure" class="hidden">
        {% if myType == 'sp' and provider.type == 'idp' and provider.loginPath %}
            <br/>
            <div class="readable">
                <h2>Login/Logout Paths</h2>
            </div>
            {{ forms.textField({
                label: "Login Path"|t(pluginHandle ),
                instructions: "Use this as the `loginPath` value in the `general.php` configuration file."|t(pluginHandle ),
                name: "loginPath",
                id: 'loginPath',
                class: "code",
                value: provider.loginPath,
                readonly: true,
                disabled: true
            }) }}

            {{ forms.textField({
                label: "Logout Path"|t(pluginHandle ),
                instructions: "Use this for your logout button if you provider supports Single Logout (SLO)."~
                " Using the twig variable looks like this: `{{ craft.samlSp.settings.logoutRequestEndpoint }}`"|t(pluginHandle ),
                name: "logoutPath",
                id: 'logoutPath',
                class: "code",
                value: provider.logoutPath,
                readonly: true,
                disabled: true
            }) }}

            {% if provider.type == 'idp' %}
                <div class="readable">
                    <h2>Mapping</h2>
                </div>
                {% set cols = {
                    'attibuteName':{
                        type: 'singleline',
                        heading: 'Attribute Name',
                    },
                    'craftProperty' : {
                        type: 'singleline',
                        heading: 'Craft Property',
                    }
                } %}

                {% set rows = provider.getMapping() %}
                {{ forms.editableTableField({
                    label: "User Attribute Mapping"|t(pluginHandle),
                    instructions: "Each mapping on a different row."|t(pluginHandle),
                    id: 'mapping',
                    name: 'mapping',
                    addRowLabel: "Add a new mapping",
                    cols: cols,
                    rows: rows,
                    errors: provider.getErrors('mapping')
                }) }}
            {% endif %}
        {% endif %}

    </div>

{% endblock %}

